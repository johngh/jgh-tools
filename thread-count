#!/usr/bin/perl
#
#
#
use warnings;
use strict;
use Getopt::Long;

our %opts;
GetOptions(
    'verbose'  => \$opts{verbose},
    'v'  => \$opts{verbose},
    'total'  => \$opts{total},
    't'  => \$opts{total},
    'help'  => \$opts{help},
    'h'  => \$opts{help},
    'usage'  => \$opts{help},
    'u'  => \$opts{help},
    );

die "Usage: $0 [-total] [-verbose] [-help]\n" if $opts{help};

my $cmd = '/bin/ps -eLf';

sub VERBOSE { $opts{verbose} }

my $procs;
my $total = 0;
open (my $cmd_fh, "$cmd|") || die "Can't run '$cmd': $!\n";
while (defined (my $line = <$cmd_fh>)) {

    #
    my @line = split(/\s+/, $line);
    if ( $opts{verbose} ) {
        if ( $#line > 10 ) {
            for my $i ( 0 .. 9 ) {
                print "$line[$i] ";
            }
            print $/;
            for my $i ( 10 .. $#line ) {
                print "\t$line[$i]\n";
            }
        } else {
            print $line;
        }
    }
    $procs->{$line[1]}++;
    $total++;

}
close $cmd_fh;


my @keys = sort { $procs->{$b} <=> $procs->{$a} } keys(%$procs);
my @vals = @{$procs}{@keys};

for my $key ( @keys ) {
    next if $procs->{$key} < 2;
    printf "%5d %s\n", $procs->{$key}, $key;
}

print "Total: $total\n" if $opts{total};

